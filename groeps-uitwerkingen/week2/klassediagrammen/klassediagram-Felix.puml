@startuml

class TransportController {
    +getAvailableTrips(tripRequest: TripRequest): Trips
}

TransportController --> TransportService

AdapterFactory --> TransportType
class TransportService {
    +getAvailableTrips(tripRequest: TripRequest): Trips
    +getAdapter(transportType: TransportType): ITransportAdapter
    +extractTransportType(tripRequest: TripRequest): TransportType
}

class Trip {
    - tripId: Long
    - departure: String
    - destination: String
    - date: Date
}

enum TransportType {
    KLM
    NS
}

interface ITransportAdapter {
    +getAvailableTrips(tripRequest: TripRequest): Trips
}

class KLMAdapter {
    +getAvailableTrips(tripRequest: TripRequest): Trips
}

class NSAdapter {
    +getAvailableTrips(tripRequest: TripRequest): Trips
}

class AdapterFactory {
    +getAdapter(transportType: TransportType): ITransportAdapter
}

TransportService --> Trip

KLMAdapter ..|> ITransportAdapter
NSAdapter ..|> ITransportAdapter
TransportService --> ITransportAdapter

AdapterFactory --> ITransportAdapter
TransportService --> AdapterFactory

TransportService --> TransportType

@enduml
