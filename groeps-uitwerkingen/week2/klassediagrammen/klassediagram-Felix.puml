@startuml

class TransportController {
    +getAvailableTrips(request: Request): Trips
}

TransportController --> TransportService

class TransportService {
    +getAvailableTrips(request: Request): Trips
    +getTransportAdapter(transportType: TransportType): ITransportAdapter
    +extractTransportType(request: Request): TransportType
}

class Journey {
    - journeyId: Long
    - departure: String
    - destination: String
    - date: Date
    - status: JourneyStatus
}

enum JourneyStatus {
    AVAILABLE
    BOOKED
    CANCELLED
}

enum TransportType {
    KLM
    NS
}

interface ITransportAdapter {
    +getAvailableTrips(request: Request): Trips
}

class KLMAdapter {
    +getAvailableTrips(request: Request): Trips
}

class NSAdapter {
    +getAvailableTrips(request: Request): Trips
}

class AdapterFactory {
    +getAdapter(transportType: TransportType): ITransportAdapter
}

TransportService --> Journey
Journey --> JourneyStatus

KLMAdapter ..|> ITransportAdapter
NSAdapter ..|> ITransportAdapter
TransportService --> ITransportAdapter

AdapterFactory --> ITransportAdapter
TransportService --> AdapterFactory

TransportService --> TransportType

@enduml
