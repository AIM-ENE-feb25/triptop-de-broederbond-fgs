@startuml

Title Component Diagram voor de backend container van het TripTop systeem

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Container(singlePageApp, "Frontend", "JavaScript en React", "Frontend van de applicatie")

Container_Boundary(backend, "Backend") {
    'Betaal componenten
    Component(paymentController, "Betaal Controller*", "Spring rest controller", "Verantwoordelijk voor het afhandelen van betalingen")
    Component(paymentService, "Betaal Service", "Spring service", "Verantwoordelijk voor het verwerken van betalingen")

    'Vervoer componenten
    Component(transportationController, "Vervoer Controller*", "Spring rest controller", "API Endpoint voor vervoer")
    Component(transportationService, "Vervoer Service", "Spring service", "Behandelt de logica voor vervoer")
    Component(transportationRepository, "Vervoer Repository", "Spring repository", "Repository klasse voor vervoer")

    'Identity componenten
    Component(identity_controller, "Identity Controller", "Spring rest controller", " API Endpoint voor accounts")
    Component(identity_service, "Identity Service", "Spring service", "Componenten met ster roepen deze aan voor het controleren van de token")
    Component(identity_dao, "Identity Repository", "Spring repository", "Repository klasse voor identity")
}

ContainerDb(database, "Database", "Container: ?", "Database voor het opslaan en ophalen van gegevens")

System_Ext(paypal, "Paypal", "Systeem voor het verwerken van betalingen")
System_Ext(stripe, "Stripe", "Systeem voor het verwerken van betalingen")

System_Ext(wireMockApi, "Wiremock API", "Identity provider voor het maken en controleren van een token")
System_Ext(auth0, "Auth0", "Identity provider voor het maken en controleren van een token")

System_Ext(NS, "NS", "Systeem voor het boeken van vervoer")
System_Ext(KLM, "KLM" , "Systeem voor het boeken van vervoer")

'Frontend relaties
Rel(singlePageApp, transportationController, "Communiceert met", "JSON/HTTP")
Rel(singlePageApp, paymentController, "Communiceert met", "JSON/HTTP")
Rel(singlePageApp, identity_controller, "Communiceert met", "JSON/HTTP")

Rel(singlePageApp, wireMockApi, "Geneert een token via", "JSON/HTTPS")
Rel(singlePageApp, auth0, "Geneert een token via", "JSON/HTTPS")

'Identity relaties
Rel(identity_controller, identity_service, "Gebruikt")
Rel(identity_service, identity_dao, "Gebruikt")
Rel(identity_dao, database, "leest en schrijft data naar")
Rel(identity_service, wireMockApi, "Controleert de token via", "JSON/HTTPS")
Rel_R(identity_service, auth0, "Controleert de token via", "JSON/HTTPS")

'Betaal relaties
Rel(paymentController, paymentService, "Verwerkt betalingslogica")
Rel_L(paymentService, paypal, "Gebruikt", "HTTPS")
Rel_L(paymentService, stripe, "Gebruikt", "HTTPS")
Rel(paymentService, transportationService, "Checkt met")

'Vervoer relaties
Rel(transportationController, transportationService, "Verwerkt vervoer logica")
Rel(transportationService, transportationRepository, "Slaapt vervoer data op")
Rel_L(transportationService, NS, "Communiceert met", "HTTPS")
Rel_L(transportationService, KLM, "Communiceert met", "HTTPS")
Rel(transportationRepository, database, "Leest en schrijft data naar")


@enduml