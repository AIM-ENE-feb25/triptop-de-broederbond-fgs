@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Container(singlePageApp, "Single-Page Application", "Frontend van de applicatie")

Container_Boundary(backend, "REST API") {
    'Vervoer componenten
    Component(transportationController, "Vervoer Controller", "API Endpoint voor vervoer")
    Component(transportationService, "Vervoer Service", "Behandelt de logica voor vervoer")
    Component(transportationRepository, "Vervoer Repository", "Repository klasse voor vervoer")

    'Betaal componenten
    Component(paymentController, "Betaal Controller", "Verantwoordelijk voor het afhandelen van betalingen")
    Component(paymentService, "Betaal Service", "Verantwoordelijk voor het verwerken van betalingen")
    Component(paymentRepository, "Betaal Repository", "Verantwoordelijk voor het lezen en schrijven van data")

    'Identity componenten
    Component(identity_controller, "Identity Controller", "Spring rest controller")
    Component(identity_service, "Identity Service", "Spring service")
    Component(identity_dao, "Identity Repository", "Spring repository")
}

ContainerDb(database, "Database", "Container: ?", "Database voor het opslaan en ophalen van gegevens")

Container_Ext(paymentProvider, "Payment Provider", "Service zoals PayPal of iDeal voor het betalen")
Component_Ext(wireMockApi, "Wiremock API", "Identity provider voor het maken en controleren van een token")
Container_Ext(transportationServiceExt, "Vervoer service", "Service voor het boeken van vervoer")

'Frontend relaties
Rel(singlePageApp, paymentController, "Communiceert met", "JSON/HTTP")

Rel(singlePageApp, identity_controller, "Communiceert met", "JSON/HTTP")
Rel(singlePageApp, wireMockApi, "Geneert een token via", "JSON/HTTPS")

Rel(singlePageApp, transportationController, "Communiceert met", "JSON/HTTP")

'Vervoer relaties
Rel(transportationController, transportationService, "Verwerkt vervoer logica")
Rel(transportationService, transportationRepository, "Slaapt vervoer data op")
Rel_L(transportationService, transportationServiceExt, "Communiceert met")
Rel(transportationRepository, database, "Leest en schrijft data naar")

'Betaal relaties
Rel(paymentController, paymentService, "Verwerkt betalingslogica")
Rel(paymentService, paymentProvider, "Gebruikt")
Rel(paymentService, paymentRepository, "Roept")
Rel(paymentRepository, database, "Leest en schrijft data naar")

'Identity relaties
Rel(identity_controller, identity_service, "Gebruikt")
Rel(identity_service, identity_dao, "Gebruikt")
Rel(identity_service, wireMockApi, "Controleert de token via", "JSON/HTTPS")
Rel(identity_dao, database, "leest en schrijft data naar")

@enduml