@startuml

autonumber

actor Traveler
participant "paymentController:\nPaymentController" as paymentController
participant "paymentService:\nPaymentService" as paymentService
participant "paymentMethodStrategy:\nPaymentMethodStrategy" as paymentMethodStrategy
participant "paymentMethodHandler:\nPaymentMethodHandler" as paymentMethodHandler
participant "paypalHandler:\nPaypalHandler" as paypalHandler
participant "stripeHandler:\nStripeHandler" as stripeHandler

Traveler -> paymentController: handlePayment(paymentRequest)
paymentController -> paymentService: handlePayment(paymentRequest)
paymentService -> paymentMethodStrategy: paymentMethodHandler = getHandler(paymentMethod)
paymentMethodStrategy -> paymentMethodHandler: return PaymentMethodHandler

alt paymentMethod = PAYPAL
    paymentService -> paypalHandler: paymentMethodHandler.handlePayment(paymentRequest)
    paypalHandler -> paypalHandler: token = getToken()
    paypalHandler -> paypalHandler: json = createPayment(token, amount)
    paypalHandler -> paypalHandler: paymentLink = getUserPaymentLink(json)
    par
        loop 20 times
            paypalHandler -> paypalHandler: capturePayment(token, paymentId)
        end
        paypalHandler -> paymentService: return paymentLink
        paymentService -> paymentController : return paymentLink
        paymentController -> Traveler: ResponseEntity<String>
    end
else paymentMethod = STRIPE
    paymentService -> stripeHandler: paymentMethodHandler.handlePayment(paymentRequest)
    stripeHandler -> stripeHandler: product = createProduct(amount)
    stripeHandler -> stripeHandler: paymentLink = createPaymentLink(product.price)
    stripeHandler -> paymentService: return paymentLik
    paymentService -> paymentController : return paymentLink
    paymentController -> Traveler: ResponseEntity<String>
end

@enduml
